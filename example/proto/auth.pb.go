// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package example

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/youlu-cn/grpc-gen/protoc-gen-auth/auth"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestType int32

const (
	RequestType__NONE RequestType = 0
	RequestType_TYPE1 RequestType = 1
	// request type 2
	RequestType_TYPE2 RequestType = 2
)

var RequestType_name = map[int32]string{
	0: "_NONE",
	1: "TYPE1",
	2: "TYPE2",
}

var RequestType_value = map[string]int32{
	"_NONE": 0,
	"TYPE1": 1,
	"TYPE2": 2,
}

func (x RequestType) String() string {
	return proto.EnumName(RequestType_name, int32(x))
}

func (RequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

type Request struct {
	//
	// leading comment
	// 2rd comment line
	//
	Id                   int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 RequestType            `protobuf:"varint,3,opt,name=type,proto3,enum=example.RequestType" json:"type,omitempty"`
	Array                []string               `protobuf:"bytes,4,rep,name=array,proto3" json:"array,omitempty"`
	Map                  map[string]RequestType `protobuf:"bytes,5,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=example.RequestType"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Request) GetType() RequestType {
	if m != nil {
		return m.Type
	}
	return RequestType__NONE
}

func (m *Request) GetArray() []string {
	if m != nil {
		return m.Array
	}
	return nil
}

func (m *Request) GetMap() map[string]RequestType {
	if m != nil {
		return m.Map
	}
	return nil
}

type Response struct {
	Embed                *Response_Embed `protobuf:"bytes,1,opt,name=embed,proto3" json:"embed,omitempty"`
	Ex                   *External       `protobuf:"bytes,2,opt,name=ex,proto3" json:"ex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetEmbed() *Response_Embed {
	if m != nil {
		return m.Embed
	}
	return nil
}

func (m *Response) GetEx() *External {
	if m != nil {
		return m.Ex
	}
	return nil
}

type Response_Embed struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response_Embed) Reset()         { *m = Response_Embed{} }
func (m *Response_Embed) String() string { return proto.CompactTextString(m) }
func (*Response_Embed) ProtoMessage()    {}
func (*Response_Embed) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1, 0}
}

func (m *Response_Embed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Embed.Unmarshal(m, b)
}
func (m *Response_Embed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Embed.Marshal(b, m, deterministic)
}
func (m *Response_Embed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Embed.Merge(m, src)
}
func (m *Response_Embed) XXX_Size() int {
	return xxx_messageInfo_Response_Embed.Size(m)
}
func (m *Response_Embed) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Embed.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Embed proto.InternalMessageInfo

func (m *Response_Embed) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterEnum("example.RequestType", RequestType_name, RequestType_value)
	proto.RegisterType((*Request)(nil), "example.Request")
	proto.RegisterMapType((map[string]RequestType)(nil), "example.Request.MapEntry")
	proto.RegisterType((*Response)(nil), "example.Response")
	proto.RegisterType((*Response_Embed)(nil), "example.Response.Embed")
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_8bbd6f3875b0e874) }

var fileDescriptor_8bbd6f3875b0e874 = []byte{
	// 426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xbb, 0xeb, 0x6e, 0xe3, 0x4c, 0xa0, 0xb8, 0xa3, 0x8a, 0x1a, 0xab, 0x07, 0x93, 0x93,
	0x55, 0x84, 0xa3, 0x6e, 0x41, 0x42, 0x9c, 0xf1, 0x05, 0x41, 0x41, 0xab, 0xf6, 0xc0, 0x09, 0x6d,
	0xc9, 0xa8, 0x44, 0xc4, 0x5e, 0x63, 0x6f, 0x50, 0x7c, 0xcd, 0x13, 0x20, 0x85, 0x27, 0xea, 0x89,
	0x3b, 0xaf, 0xc0, 0x81, 0xc7, 0x40, 0xf6, 0xba, 0xa8, 0x4a, 0x85, 0xd4, 0xdb, 0x78, 0xf6, 0x9b,
	0x6f, 0xff, 0xb1, 0x16, 0x40, 0x2f, 0xec, 0xe7, 0xb4, 0xac, 0x8c, 0x35, 0x38, 0xa0, 0xa5, 0xce,
	0xcb, 0x39, 0x45, 0xf7, 0x3e, 0x99, 0x3c, 0x37, 0x85, 0x6b, 0x47, 0x0f, 0x5b, 0x64, 0xa2, 0x8b,
	0xc2, 0x58, 0x6d, 0x67, 0xa6, 0xa8, 0xfb, 0xfe, 0xe1, 0xa5, 0x31, 0x97, 0x73, 0x9a, 0xe8, 0x72,
	0x76, 0xfb, 0x74, 0xfc, 0x87, 0xc1, 0x40, 0xd1, 0xd7, 0x05, 0xd5, 0x16, 0x77, 0x81, 0xcf, 0xa6,
	0x21, 0x8b, 0x59, 0x22, 0x14, 0x9f, 0x4d, 0x11, 0x61, 0xbb, 0xd0, 0x39, 0x85, 0x3c, 0x66, 0xc9,
	0x50, 0x75, 0x35, 0x26, 0xb0, 0x6d, 0x9b, 0x92, 0x42, 0x2f, 0x66, 0xc9, 0xae, 0xdc, 0x4f, 0xfb,
	0x2c, 0x69, 0xef, 0x38, 0x6b, 0x4a, 0x52, 0x1d, 0x81, 0xfb, 0x20, 0x74, 0x55, 0xe9, 0x26, 0xdc,
	0x8e, 0xbd, 0x64, 0xa8, 0xdc, 0x07, 0x3e, 0x01, 0x2f, 0xd7, 0x65, 0x28, 0x62, 0x2f, 0x19, 0xc9,
	0x47, 0x9b, 0xe3, 0xe9, 0x5b, 0x5d, 0x66, 0x85, 0xad, 0x1a, 0xd5, 0x52, 0xd1, 0x1b, 0xf0, 0xaf,
	0x1b, 0x18, 0x80, 0xf7, 0x85, 0x9a, 0x2e, 0xdd, 0x50, 0xb5, 0x25, 0x1e, 0x81, 0xf8, 0xa6, 0xe7,
	0x0b, 0x97, 0xef, 0x7f, 0x59, 0x1c, 0xf2, 0x92, 0xbf, 0x60, 0xe3, 0x05, 0xf8, 0x8a, 0xea, 0xd2,
	0x14, 0x35, 0xe1, 0x53, 0x10, 0x94, 0x5f, 0x90, 0xdb, 0x76, 0x24, 0x0f, 0x6e, 0xcc, 0x3a, 0x22,
	0xcd, 0xda, 0x63, 0xe5, 0x28, 0x7c, 0x0c, 0x9c, 0x96, 0xdd, 0x3d, 0x23, 0xb9, 0xf7, 0x8f, 0xcd,
	0x96, 0x96, 0xaa, 0x42, 0xcf, 0x15, 0xa7, 0x65, 0x74, 0x00, 0xa2, 0x1b, 0xd9, 0xfc, 0x8b, 0x47,
	0x29, 0x8c, 0x6e, 0x04, 0xc2, 0x21, 0x88, 0x8f, 0xa7, 0xef, 0x4e, 0xb3, 0x60, 0xab, 0x2d, 0xcf,
	0x3e, 0xbc, 0xcf, 0x8e, 0x03, 0x76, 0x5d, 0xca, 0x80, 0xcb, 0x57, 0x30, 0xc8, 0xdc, 0x05, 0xf8,
	0x0c, 0x84, 0xa5, 0xda, 0x1e, 0x63, 0xb0, 0xb9, 0x5b, 0xb4, 0x77, 0x2b, 0xf1, 0x78, 0xe7, 0x6a,
	0xcd, 0xb8, 0x3f, 0x8d, 0xbc, 0xd5, 0xf9, 0x96, 0xfc, 0xc1, 0xc0, 0xef, 0x35, 0x12, 0x5f, 0x3b,
	0x8f, 0xbc, 0x9b, 0xe7, 0xf0, 0x6a, 0xcd, 0x3c, 0xff, 0x27, 0x5b, 0xfd, 0xfa, 0xbd, 0xe6, 0x0f,
	0xf0, 0xfe, 0xa4, 0x27, 0x26, 0xad, 0x03, 0x9f, 0x3b, 0xd7, 0xc9, 0xdd, 0x5c, 0x83, 0xce, 0xf5,
	0xdd, 0x8b, 0xc4, 0xea, 0x9c, 0xfb, 0xfc, 0x62, 0xa7, 0x7b, 0x75, 0x27, 0x7f, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x21, 0x35, 0x72, 0x7a, 0xd0, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExampleClient is the client API for Example service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExampleClient interface {
	// test1 comment
	Test1(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type exampleClient struct {
	cc *grpc.ClientConn
}

func NewExampleClient(cc *grpc.ClientConn) ExampleClient {
	return &exampleClient{cc}
}

func (c *exampleClient) Test1(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/example.Example/test1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExampleServer is the server API for Example service.
type ExampleServer interface {
	// test1 comment
	Test1(context.Context, *Request) (*Response, error)
}

// UnimplementedExampleServer can be embedded to have forward compatible implementations.
type UnimplementedExampleServer struct {
}

func (*UnimplementedExampleServer) Test1(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Test1 not implemented")
}

func RegisterExampleServer(s *grpc.Server, srv ExampleServer) {
	s.RegisterService(&_Example_serviceDesc, srv)
}

func _Example_Test1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExampleServer).Test1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.Example/Test1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExampleServer).Test1(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Example_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.Example",
	HandlerType: (*ExampleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "test1",
			Handler:    _Example_Test1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}

// Example2Client is the client API for Example2 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Example2Client interface {
	// test2 comment
	Test2(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	// test3 interface
	Test3(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type example2Client struct {
	cc *grpc.ClientConn
}

func NewExample2Client(cc *grpc.ClientConn) Example2Client {
	return &example2Client{cc}
}

func (c *example2Client) Test2(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/example.Example2/test2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *example2Client) Test3(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/example.Example2/test3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Example2Server is the server API for Example2 service.
type Example2Server interface {
	// test2 comment
	Test2(context.Context, *Request) (*Response, error)
	// test3 interface
	Test3(context.Context, *Request) (*Response, error)
}

// UnimplementedExample2Server can be embedded to have forward compatible implementations.
type UnimplementedExample2Server struct {
}

func (*UnimplementedExample2Server) Test2(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Test2 not implemented")
}
func (*UnimplementedExample2Server) Test3(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Test3 not implemented")
}

func RegisterExample2Server(s *grpc.Server, srv Example2Server) {
	s.RegisterService(&_Example2_serviceDesc, srv)
}

func _Example2_Test2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Example2Server).Test2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.Example2/Test2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Example2Server).Test2(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Example2_Test3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Example2Server).Test3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.Example2/Test3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Example2Server).Test3(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Example2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.Example2",
	HandlerType: (*Example2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "test2",
			Handler:    _Example2_Test2_Handler,
		},
		{
			MethodName: "test3",
			Handler:    _Example2_Test3_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}
